[gd_scene load_steps=24 format=2]

[ext_resource path="res://World.tscn" type="PackedScene" id=1]
[ext_resource path="res://TransitionScreen.tscn" type="PackedScene" id=2]
[ext_resource path="res://SceneManager.gd" type="Script" id=3]
[ext_resource path="res://Dialog/Dialog.tscn" type="PackedScene" id=4]
[ext_resource path="res://addons/os_async_executer/OSAsyncExecute.gd" type="Script" id=5]
[ext_resource path="res://Assets/MainRoom/imreadybutton.png" type="Texture" id=6]
[ext_resource path="res://Assets/MainRoom/imreadypressed.png" type="Texture" id=7]
[ext_resource path="res://ImReadyBtn.gd" type="Script" id=8]
[ext_resource path="res://FinalScreen.tscn" type="PackedScene" id=9]
[ext_resource path="res://RestartMenu.tscn" type="PackedScene" id=10]

[sub_resource type="GDScript" id=10]
resource_local_to_scene = true
script/source = "extends KinematicBody2D

export var ACCELERATION = 600
export var MAX_SPEED = 70
export var FRICTION = 200
export var NAME = \"Artorius\"


enum {
	IDLE,
	IN_CONVERSATION,
	WANDER
}

enum {
	LEFT,
	RIGHT
}

var square_next = RIGHT


const TOLERANCE = 4.0
var velocity = Vector2.ZERO
var state = WANDER
onready var playerDetectionZone = $PlayerDetectionZone
onready var start_position = global_position
onready var target_position = global_position
var rng = RandomNumberGenerator.new()
signal conversation(demon_name)
signal name(NAME)
onready var animation_player = $AnimationPlayer

onready var timer = get_node(\"Timer\")
func _ready():
	emit_signal(\"name\", NAME)
	print(\"Emitting signal\", NAME)
	timer.set_wait_time(5)
	timer.start()


func TimerTimeout():
	pass

func _physics_process(delta):
	see_player()
	match state:
		IDLE:
			var player = playerDetectionZone.player
			if player != null and Input.is_key_pressed(KEY_E):
				print(\"emitting conversation\")
				emit_signal(\"conversation\", NAME)
			elif player != null:
				velocity = velocity.move_toward(Vector2.ZERO, FRICTION *delta)
		WANDER:
			var player = playerDetectionZone.player
			var point = update_target_position()
			var direction = (point - global_position).normalized()
			print(direction)
			if player ==  null:
				velocity = velocity.move_toward(direction * MAX_SPEED, ACCELERATION * delta)

	velocity = move_and_slide(velocity)

func see_player():
	if playerDetectionZone.can_see_player():
		state = IDLE
	else:
		state = WANDER
		
		
func update_target_position():
	var target_vector = Vector2.ZERO

	match square_next:
		LEFT:
			target_vector = Vector2(start_position.x - 100, start_position.y)
			animation_player.play(\"run_left\")
			if is_at_target_position():
				square_next = RIGHT
			target_position = target_vector
		RIGHT:
			target_vector = Vector2(start_position.x + 100, start_position.y)
			animation_player.play(\"run_right\")
			if is_at_target_position():
				square_next = LEFT
			target_position = target_vector
	return target_position

func is_at_target_position():
	return (target_position - global_position).length() < TOLERANCE

"

[sub_resource type="StreamTexture" id=6]
load_path = "res://.import/Artorius.png-c15b7a82ec9bae0d037bd29016a8b2af.stex"

[sub_resource type="CapsuleShape2D" id=1]
radius = 16.0
height = 0.0

[sub_resource type="GDScript" id=13]
resource_local_to_scene = true
script/source = "extends Area2D

var player = null


func can_see_player():
	return player != null

func _on_PlayerDetectionZone_body_entered(body):
	player = body
	pass # Replace with function body.


func _on_PlayerDetectionZone_body_exited(body):
	player = null
	pass # Replace with function body.
"

[sub_resource type="CircleShape2D" id=14]
radius = 80.0

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 6 ]
}

[sub_resource type="Animation" id=7]
resource_name = "run_backward"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 9, 10, 11, 9 ]
}

[sub_resource type="Animation" id=9]
resource_name = "run_forward"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 0 ]
}

[sub_resource type="Animation" id=5]
resource_name = "run_left"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 4, 5, 3 ]
}

[sub_resource type="Animation" id=4]
resource_name = "run_right"
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 6, 7, 8, 6 ]
}

[sub_resource type="GDScript" id=11]
resource_local_to_scene = true
script/source = "extends KinematicBody2D

export var ACCELERATION = 600
export var MAX_SPEED = 70
export var FRICTION = 200
export var NAME = \"Magdela\"


enum {
	IDLE,
	IN_CONVERSATION,
	WANDER
}

enum {
	LEFT,
	RIGHT
}

var square_next = RIGHT


const TOLERANCE = 4.0
var velocity = Vector2.ZERO
var state = WANDER
onready var playerDetectionZone = $PlayerDetectionZone
onready var start_position = global_position
onready var target_position = global_position
var rng = RandomNumberGenerator.new()
signal conversation(demon_name)
signal name(NAME)
onready var animation_player = $AnimationPlayer

onready var timer = get_node(\"Timer\")
func _ready():
	emit_signal(\"name\", NAME)
	print(\"Emitting signal\", NAME)
	timer.set_wait_time(5)
	timer.start()


func TimerTimeout():
	pass

func _physics_process(delta):
	see_player()
	match state:
		IDLE:
			animation_player.play(\"RESET\")
			var player = playerDetectionZone.player
			if player != null and Input.is_key_pressed(KEY_E):
				print(\"emitting conversation\")
				emit_signal(\"conversation\", NAME)
			elif player != null:
				velocity = velocity.move_toward(Vector2.ZERO, FRICTION *delta)
		WANDER:
			var player = playerDetectionZone.player
			var point = update_target_position()
			var direction = (point - global_position).normalized()
			print(direction)
			if player ==  null:
				velocity = velocity.move_toward(direction * MAX_SPEED, ACCELERATION * delta)

	velocity = move_and_slide(velocity)

func see_player():
	if playerDetectionZone.can_see_player():
		state = IDLE
	else:
		state = WANDER
		
		
func update_target_position():
	var target_vector = Vector2.ZERO

	match square_next:
		LEFT:
			target_vector = Vector2(start_position.x - 100, start_position.y)
			animation_player.play(\"run_left\")
			if is_at_target_position():
				square_next = RIGHT
			target_position = target_vector
		RIGHT:
			target_vector = Vector2(start_position.x + 100, start_position.y)
			animation_player.play(\"run_right\")
			if is_at_target_position():
				square_next = LEFT
			target_position = target_vector
	return target_position

func is_at_target_position():
	return (target_position - global_position).length() < TOLERANCE

"

[sub_resource type="StreamTexture" id=8]
load_path = "res://.import/Magdela.png-328194c7deb60d9874c5f87fbeb9763b.stex"

[sub_resource type="GDScript" id=15]
resource_local_to_scene = true
script/source = "extends Area2D

var player = null


func can_see_player():
	return player != null

func _on_PlayerDetectionZone_body_entered(body):
	player = body
	pass # Replace with function body.


func _on_PlayerDetectionZone_body_exited(body):
	player = null
	pass # Replace with function body.
"

[node name="SceneManager" type="Node2D"]
script = ExtResource( 3 )

[node name="RestartMenu" parent="." instance=ExtResource( 10 )]

[node name="FinalScreen" parent="." instance=ExtResource( 9 )]
position = Vector2( -24, 0 )

[node name="Dialog" parent="." instance=ExtResource( 4 )]

[node name="Sprite" parent="Dialog/YSort" index="2"]
position = Vector2( -8, 64 )

[node name="OSAsyncExecute" type="Node" parent="Dialog/RichTextLabel" index="1"]
script = ExtResource( 5 )

[node name="CurrentScene" type="Node2D" parent="."]

[node name="World" parent="CurrentScene" instance=ExtResource( 1 )]

[node name="TextureButton" type="TextureButton" parent="CurrentScene/World/YSort" index="0"]
margin_left = 8.0
margin_top = 312.0
margin_right = 408.0
margin_bottom = 512.0
rect_scale = Vector2( 0.2, 0.2 )
texture_normal = ExtResource( 6 )
texture_pressed = ExtResource( 7 )
stretch_mode = 2
script = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Demon2" parent="CurrentScene/World/YSort" index="2"]
script = SubResource( 10 )

[node name="Demon" type="Sprite" parent="CurrentScene/World/YSort/Demon2" index="0"]
position = Vector2( 0, -24 )
texture = SubResource( 6 )
hframes = 3
vframes = 4
frame = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="CurrentScene/World/YSort/Demon2" index="1"]
position = Vector2( 0, -8 )
shape = SubResource( 1 )

[node name="PlayerDetectionZone" type="Area2D" parent="CurrentScene/World/YSort/Demon2" index="2"]
collision_layer = 0
script = SubResource( 13 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="CurrentScene/World/YSort/Demon2/PlayerDetectionZone"]
modulate = Color( 0.980392, 0.243137, 0.243137, 0.32549 )
position = Vector2( 0, -8 )
shape = SubResource( 14 )

[node name="Timer" type="Timer" parent="CurrentScene/World/YSort/Demon2" index="3"]

[node name="AnimationPlayer" type="AnimationPlayer" parent="CurrentScene/World/YSort/Demon2" index="4"]
root_node = NodePath("../Demon")
anims/RESET = SubResource( 3 )
anims/run_backward = SubResource( 7 )
anims/run_forward = SubResource( 9 )
anims/run_left = SubResource( 5 )
anims/run_right = SubResource( 4 )

[node name="Demon" parent="CurrentScene/World/YSort" index="3"]
script = SubResource( 11 )

[node name="Demon" type="Sprite" parent="CurrentScene/World/YSort/Demon" index="0"]
position = Vector2( 0, -24 )
texture = SubResource( 8 )
hframes = 3
vframes = 4
frame = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="CurrentScene/World/YSort/Demon" index="1"]
position = Vector2( 0, -8 )
shape = SubResource( 1 )

[node name="PlayerDetectionZone" type="Area2D" parent="CurrentScene/World/YSort/Demon" index="2"]
collision_layer = 0
script = SubResource( 15 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="CurrentScene/World/YSort/Demon/PlayerDetectionZone"]
modulate = Color( 0.980392, 0.243137, 0.243137, 0.32549 )
position = Vector2( 0, -8 )
shape = SubResource( 14 )

[node name="Timer" type="Timer" parent="CurrentScene/World/YSort/Demon" index="3"]

[node name="AnimationPlayer" type="AnimationPlayer" parent="CurrentScene/World/YSort/Demon" index="4"]
root_node = NodePath("../Demon")
anims/RESET = SubResource( 3 )
anims/run_backward = SubResource( 7 )
anims/run_forward = SubResource( 9 )
anims/run_left = SubResource( 5 )
anims/run_right = SubResource( 4 )

[node name="TransitionScreen" parent="." instance=ExtResource( 2 )]

[node name="ColorRect" parent="TransitionScreen" index="0"]
margin_left = -24.0
margin_bottom = 376.0
mouse_filter = 2

[connection signal="exit_screen" from="." to="RestartMenu/WinOrLose" method="_on_SceneManager_exit_screen"]
[connection signal="win_or_lose" from="RestartMenu/WinOrLose" to="RestartMenu/Restart_Screen_Text" method="_on_WinOrLose_win_or_lose"]
[connection signal="question_1_correct" from="FinalScreen/Question_1_answer" to="RestartMenu/WinOrLose" method="_on_Question_1_answer_question_1_correct"]
[connection signal="question_2_correct" from="FinalScreen/Question_1_answer2" to="RestartMenu/WinOrLose" method="_on_Question_1_answer2_question_2_correct"]
[connection signal="question_3_correct" from="FinalScreen/Question_1_answer3" to="RestartMenu/WinOrLose" method="_on_Question_1_answer3_question_3_correct"]
[connection signal="question_4_correct" from="FinalScreen/Question_1_answer4" to="RestartMenu/WinOrLose" method="_on_Question_1_answer4_question_4_correct"]
[connection signal="pressed" from="FinalScreen/Final_Button" to="." method="_on_Final_Button_pressed"]
[connection signal="Player_Response" from="Dialog/RichTextLabel" to="Dialog/Socket" method="_on_RichTextLabel_Player_Response"]
[connection signal="exit_dialog" from="Dialog/RichTextLabel" to="." method="_on_RichTextLabel_exit_dialog"]
[connection signal="payload_received" from="Dialog/Socket" to="Dialog/RichTextLabel" method="_on_Socket_payload_received"]
[connection signal="pressed" from="CurrentScene/World/YSort/TextureButton" to="." method="_on_TextureButton_pressed"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon2" to="." method="_on_Demon2_conversation"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon2" to="Dialog/YSort/Sprite" method="_on_Demon2_conversation"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon2" to="Dialog/Socket" method="_on_Demon2_conversation"]
[connection signal="name" from="CurrentScene/World/YSort/Demon2" to="Dialog/YSort/Sprite" method="_on_Demon2_name"]
[connection signal="name" from="CurrentScene/World/YSort/Demon2" to="Dialog/Socket" method="_on_Demon2_name"]
[connection signal="body_entered" from="CurrentScene/World/YSort/Demon2/PlayerDetectionZone" to="CurrentScene/World/YSort/Demon2/PlayerDetectionZone" method="_on_PlayerDetectionZone_body_entered"]
[connection signal="body_exited" from="CurrentScene/World/YSort/Demon2/PlayerDetectionZone" to="CurrentScene/World/YSort/Demon2/PlayerDetectionZone" method="_on_PlayerDetectionZone_body_exited"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon" to="." method="_on_Demon_conversation"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon" to="Dialog/YSort/Sprite" method="_on_Demon_conversation"]
[connection signal="conversation" from="CurrentScene/World/YSort/Demon" to="Dialog/Socket" method="_on_Demon_conversation"]
[connection signal="name" from="CurrentScene/World/YSort/Demon" to="Dialog/Socket" method="_on_Demon_name"]
[connection signal="body_entered" from="CurrentScene/World/YSort/Demon/PlayerDetectionZone" to="CurrentScene/World/YSort/Demon/PlayerDetectionZone" method="_on_PlayerDetectionZone_body_entered"]
[connection signal="body_exited" from="CurrentScene/World/YSort/Demon/PlayerDetectionZone" to="CurrentScene/World/YSort/Demon/PlayerDetectionZone" method="_on_PlayerDetectionZone_body_exited"]
[connection signal="transition" from="TransitionScreen" to="." method="_on_TransitionScreen_transition"]

[editable path="RestartMenu"]
[editable path="FinalScreen"]
[editable path="Dialog"]
[editable path="CurrentScene/World"]
[editable path="CurrentScene/World/YSort/Demon2"]
[editable path="CurrentScene/World/YSort/Demon2/PlayerDetectionZone"]
[editable path="TransitionScreen"]
